cmake_minimum_required(VERSION 3.5.1)
SET(CMAKE_SYSTEM_NAME Linux)

SET(ARM_32 arm_32)
#SET(ARM_64 arm_64)
SET(GCC_PATH /mnt/fileroot/junyi.shen/buildroot/toolchain/gcc/linux-x86)

PROJECT(AML_NN_SDK)
#SET(OPENCV_ROOT ../349)
#include_directories(${OPENCV_ROOT}/include)

if(DEFINED ARM_64)
	SET(COMPILER ${GCC_PATH}/aarch64/gcc-linaro-6.3.1-2017.02-x86_64_aarch64-linux-gnu/bin/)
	SET(CMAKE_C_COMPILER ${COMPILER}/aarch64-linux-gnu-gcc)
	SET(CMAKE_CXX_COMPILER ${COMPILER}/aarch64-linux-gnu-g++)
	#SET(LINK_DIR ../349/lib64 ./)
	SET(LINK_DIR ../lib64 ./)
elseif(DEFINED ARM_32)
	SET(COMPILER ${GCC_PATH}/arm/gcc-linaro-6.3.1-2017.02-x86_64_arm-linux-gnueabihf/bin)
	SET(CMAKE_C_COMPILER  ${COMPILER}/arm-linux-gnueabihf-gcc)
	SET(CMAKE_CXX_COMPILER  ${COMPILER}/arm-linux-gnueabihf-g++)
	SET(LINK_DIR ../lib32 ./)
endif()

link_directories(${LINK_DIR})
aux_source_directory(. SRC_LIST)
link_libraries(nnsdk libjpeg.a )
#link_libraries(nnsdk nndemo opencv_imgcodecs opencv_imgproc opencv_highgui opencv_core opencv_videoio opencv_dnn libjpeg.a )

if(DEFINED ARM_64)
	ADD_EXECUTABLE(sdkdemo64 ${SRC_LIST})
	target_link_libraries(sdkdemo64 -lpthread -lm -ldl)
elseif(DEFINED ARM_32)
	ADD_EXECUTABLE(sdkdemo32 ${SRC_LIST})
	target_link_libraries(sdkdemo32 -lpthread -lm)
endif()